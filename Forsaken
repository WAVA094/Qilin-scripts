local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))() 
local Window = redzlib:MakeWindow({
    Title = "FORSAKEN || qilin hubü¶Ñ",
    SubTitle = "https://t.me/qlnscrpt",
    SaveFolder = "Redz library"
})

-- –û–±—ä—è–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
local connections = {}
local aimbot1x1loop, johnloop, shedloop, guestloop

-- –°–æ—Å—Ç–æ—è–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
local CurrentValue = 16
local ValueSpeed = 16
local ActiveAutoGenerator = false
local ActiveInfiniteStamina = false
local ActiveAutoKillSurvivors = false
local ActiveEspSurvivors = false
local ActiveEspKillers = false
local ActiveEspGenerator = false
local ActiveEspItems = false
local isCorruptNatureEspActive = false
local aimbot1x1 = false
local johnaim = false
local guestaim = false
local shedaim = false
local jumppowerenabled = false

-- ESP Functions
function CreateEsp(target, color)
    if not target or not target.Parent then return end
    if target:FindFirstChild("ESP_Highlight") then return end
    
    local highlight = Instance.new("Highlight")
    highlight.Parent = target
    highlight.FillColor = color
    highlight.OutlineColor = color
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.Name = "ESP_Highlight"
end

function KeepEsp(target)
    if target and target.Parent and target:FindFirstChild("ESP_Highlight") then
        target.ESP_Highlight:Destroy()
    end
end

local Tab1 = Window:MakeTab({"üåüMAIN", "–¢–µ—Å—Ç"})
local Tab2 = Window:MakeTab({"üë§PLAYER", "–¢–µ—Å—Ç"})
local Tab3 = Window:MakeTab({"üë•ESP", "–¢–µ—Å—Ç"})
local Tab4 = Window:MakeTab({"üî´AIMBOT", "–¢–µ—Å—Ç"})
local Tab5 = Window:MakeTab({"‚ûïMISC", "–¢–µ—Å—Ç"})

Tab1:AddDiscordInvite({
    Name = "QILIN SCRIPTS",
    Description = "–ó–î–ï–°–¨ –¢–´ –ù–ê–ô–î–Å–®–¨ –°–ê–ú–´–ï –õ–£–¢–®–ò–ï –°–ö–†–ò–ü–¢–´ HERE YOU WILL FIND THE BEST SCRIPTS  ",
    Logo = "rbxassetid://18751483361",
    Invite = "https://t.me/qlnscrpt",
})

local Paragraph = Tab1:AddParagraph({"", "–ê–±–∑–∞—Ü\n–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞"})

-- PLAYER TAB
Tab2:AddSlider({
    Name = "PLAYER SPEED SLIDER",
    Min = 1,
    Max = 100,
    Increase = 1,
    Default = 16,
    Callback = function(Value)
        CurrentValue = Value
        ValueSpeed = Value
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
        end
    end
})

Tab2:AddToggle({
    Name = "AUTO GENERATOR",
    Default = false,
    Callback = function(Value)
        ActiveAutoGenerator = Value 
        task.spawn(function()
            while ActiveAutoGenerator do 
                if game:GetService("Workspace").Map.Ingame:FindFirstChild("Map") then
                    for _, generator in pairs(game:GetService("Workspace").Map.Ingame.Map:GetChildren()) do 
                        if generator:IsA("Model") and generator.Name == "Generator" then 
                            if generator:FindFirstChild("Remotes") and generator.Remotes:FindFirstChild("RE") then 
                                generator.Remotes.RE:FireServer() 
                            end
                        end
                    end 
                end
                task.wait(2.5)
            end 
        end)
    end
})

Tab2:AddToggle({
    Name = "INF STAMINA",
    Default = false,
    Callback = function(Value)
        ActiveInfiniteStamina = Value
        task.spawn(function()
            while ActiveInfiniteStamina do
                local Sprinting = game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting
                if Sprinting then
                    local stamina = require(Sprinting)
                    stamina.MaxStamina = 100
                    stamina.MinStamina = -20
                    stamina.StaminaGain = 100
                    stamina.StaminaLoss = 5
                    stamina.SprintSpeed = 40
                    stamina.StaminaLossDisabled = true
                end
                task.wait(0.5) -- –ü—Ä–∏–º–µ–Ω—è—Ç—å –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥
            end
        end)
    end
})
Tab2:AddToggle({
    Name = "AUTO KILL SURVIVOR",
    Default = false,
    Callback = function(Value)
        ActiveAutoKillSurvivors = Value 
        task.spawn(function()
            while ActiveAutoKillSurvivors do 
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    for _, survivor in pairs(game:GetService("Workspace").Players.Survivors:GetChildren()) do 
                        if survivor:IsA("Model") and survivor:FindFirstChild("HumanoidRootPart") then
                            character.HumanoidRootPart.CFrame = survivor.HumanoidRootPart.CFrame
                            
                            if game:GetService("ReplicatedStorage"):FindFirstChild("Modules") then
                                local network = game:GetService("ReplicatedStorage").Modules.Network
                                if network and network:FindFirstChild("RemoteEvent") then
                                    network.RemoteEvent:FireServer("UseActorAbility", "Slash")
                                end
                            end
                            task.wait(0.2)
                        end
                    end
                end
                task.wait(0.1)
            end 
        end)
    end
})

Tab2:AddButton({
    Name = "TP TO RANDOM GENERATOR",
    Callback = function()
        local mapFolder = workspace:FindFirstChild("Map") and workspace.Map.Ingame:FindFirstChild("Map")
        if not mapFolder then return end

        local generators = {}
        for _, child in pairs(mapFolder:GetChildren()) do
            if child:IsA("Model") and child.Name == "Generator" then
                table.insert(generators, child)
            end
        end
        
        if #generators == 0 then return end
        
        local randomGenerator = generators[math.random(1, #generators)]
        local mainPart = randomGenerator:FindFirstChild("Main")
        local character = game.Players.LocalPlayer.Character
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        
        if hrp and mainPart then
            hrp.CFrame = mainPart.CFrame
        end
    end
})

-- ESP TAB
Tab3:AddToggle({
    Name = "ESP SURVIVORS",
    Default = false,
    Callback = function(Value)
        ActiveEspSurvivors = Value 
        task.spawn(function()
            while ActiveEspSurvivors do 
                local survivorsFolder = game:GetService("Workspace").Players:FindFirstChild("Survivors")
                if survivorsFolder then
                    for _, survivor in pairs(survivorsFolder:GetChildren()) do 
                        if survivor:IsA("Model") and not survivor:FindFirstChild("ESP_Highlight") then
                            CreateEsp(survivor, Color3.fromRGB(0, 255, 0))
                        end
                    end
                end
                task.wait(1)
            end 
            
            local survivorsFolder = game:GetService("Workspace").Players:FindFirstChild("Survivors")
            if survivorsFolder then
                for _, survivor in pairs(survivorsFolder:GetChildren()) do 
                    if survivor:IsA("Model") and survivor:FindFirstChild("ESP_Highlight") then
                        KeepEsp(survivor)
                    end
                end 
            end
        end)
    end
})

local function corruptnatureesp(state)
    isCorruptNatureEspActive = state
    for i, v in pairs(game:GetService("Workspace").Map.Ingame:GetChildren()) do
        if v:IsA("Model") then
            local existingHighlight = v:FindFirstChild("CorruptNatureHighlight")
            if isCorruptNatureEspActive then
                if not existingHighlight then
                    if v.Name == "HumanoidRootProjectile" or v.Name == "PizzaDeliveryRig" or v.Name == "Bunny" or v.Name == "Mafiaso1" or v.Name == "Mafiaso2" or v.Name == "Mafiaso3" then
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "CorruptNatureHighlight"
                        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        highlight.Parent = v
                    end
                end
            elseif existingHighlight then
                existingHighlight:Destroy()
            end
        end
    end
end

Tab3:AddToggle({
    Name = "COOLKID ESP",
    Default = false,
    Callback = function(state)
        corruptnatureesp(state)
    end
})

Tab3:AddToggle({
    Name = "ESP KILLERS",
    Default = false,
    Callback = function(Value)
        ActiveEspKillers = Value 
        task.spawn(function()
            while ActiveEspKillers do 
                local killersFolder = game:GetService("Workspace").Players:FindFirstChild("Killers")
                if killersFolder then
                    for _, killer in pairs(killersFolder:GetChildren()) do 
                        if killer:IsA("Model") and not killer:FindFirstChild("ESP_Highlight") then
                            CreateEsp(killer, Color3.fromRGB(255, 0, 0))
                        end
                    end
                end
                task.wait(1)
            end 
            
            local killersFolder = game:GetService("Workspace").Players:FindFirstChild("Killers")
            if killersFolder then
                for _, killer in pairs(killersFolder:GetChildren()) do 
                    if killer:IsA("Model") and killer:FindFirstChild("ESP_Highlight") then
                        KeepEsp(killer)
                    end
                end 
            end
        end)
    end
})

Tab3:AddToggle({
    Name = "ESP GENERATORS",
    Default = false,
    Callback = function(Value)
        ActiveEspGenerator = Value 
        task.spawn(function()
            while ActiveEspGenerator do
                if game:GetService("Workspace").Map.Ingame:FindFirstChild("Map") then
                    for _, generator in pairs(game:GetService("Workspace").Map.Ingame.Map:GetChildren()) do 
                        if generator:IsA("Model") and generator.Name == "Generator" and not generator:FindFirstChild("ESP_Highlight") then
                            CreateEsp(generator, Color3.fromRGB(255, 255, 0))
                        end
                    end
                end
                task.wait(1)
            end
            
            if game:GetService("Workspace").Map.Ingame:FindFirstChild("Map") then
                for _, generator in pairs(game:GetService("Workspace").Map.Ingame.Map:GetChildren()) do 
                    if generator:IsA("Model") and generator.Name == "Generator" and generator:FindFirstChild("ESP_Highlight") then
                        KeepEsp(generator)
                    end
                end
            end
        end)
    end
})

Tab3:AddToggle({
    Name = "ITEMS ESP",
    Default = false,
    Callback = function(Value)
        ActiveEspItems = Value 
        task.spawn(function()
            while ActiveEspItems do
                for _, item in pairs(workspace:GetDescendants()) do
                    if item:IsA("Tool") and not item:FindFirstChild("ESP_Highlight") then
                        CreateEsp(item, Color3.fromRGB(0, 0, 255))
                    end
                end
                task.wait(1)
            end
            
            for _, item in pairs(workspace:GetDescendants()) do
                if item:IsA("Tool") and item:FindFirstChild("ESP_Highlight") then
                    KeepEsp(item)
                end
            end
        end)
    end
})

-- AIMBOT TAB

local function killerAimbot(state, loopName)
    local loopVar = _G[loopName]
    local player = game.Players.LocalPlayer
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å —É–±–∏–π—Ü—ã
    local isKiller = workspace.Players.Killers:FindFirstChild(player.Name) ~= nil
    if state and not isKiller then
        return
    end

    if state then
        _G[loopName] = task.spawn(function()
            while state and isKiller do
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local targets = {}
                    local survivorsFolder = workspace.Players.Survivors
                    
                    -- –°–æ–±–∏—Ä–∞–µ–º –≤—ã–∂–∏–≤—à–∏—Ö
                    for _, survivor in pairs(survivorsFolder:GetChildren()) do
                        if survivor:IsA("Model") and survivor:FindFirstChild("HumanoidRootPart") then
                            table.insert(targets, survivor)
                        end
                    end
                    
                    -- –ò—â–µ–º –±–ª–∏–∂–∞–π—à–µ–≥–æ –≤—ã–∂–∏–≤—à–µ–≥–æ
                    local nearestTarget = nil
                    local shortestDistance = math.huge
                    local playerHRP = character.HumanoidRootPart
                    
                    for _, target in ipairs(targets) do
                        local targetHRP = target.HumanoidRootPart
                        local distance = (targetHRP.Position - playerHRP.Position).Magnitude
                        if distance < shortestDistance then
                            shortestDistance = distance
                            nearestTarget = target
                        end
                    end
                    
                    -- –ù–∞–≤–æ–¥–∏–º—Å—è –Ω–∞ —Ü–µ–ª—å
                    if nearestTarget then
                        local targetHRP = nearestTarget.HumanoidRootPart
                        workspace.CurrentCamera.CFrame = CFrame.new(
                            workspace.CurrentCamera.CFrame.Position, 
                            targetHRP.Position
                        )
                        playerHRP.CFrame = CFrame.lookAt(
                            playerHRP.Position, 
                            Vector3.new(targetHRP.Position.X, targetHRP.Position.Y, targetHRP.Position.Z)
                        )
                    end
                end
                task.wait(0.01)
            end
        end)
    elseif loopVar then
        task.cancel(loopVar)
        _G[loopName] = nil
    end
end

local function survivorAimbot(state, loopName)
    local loopVar = _G[loopName]
    local player = game.Players.LocalPlayer
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –≤—ã–∂–∏–≤—à–µ–≥–æ
    local isSurvivor = workspace.Players.Survivors:FindFirstChild(player.Name) ~= nil
    if state and not isSurvivor then
        return
    end

    if state then
        _G[loopName] = task.spawn(function()
            while state and isSurvivor do
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local targets = {}
                    local killersFolder = workspace.Players.Killers
                    
                    -- –°–æ–±–∏—Ä–∞–µ–º —É–±–∏–π—Ü
                    for _, killer in pairs(killersFolder:GetChildren()) do
                        if killer:IsA("Model") and killer:FindFirstChild("HumanoidRootPart") then
                            table.insert(targets, killer)
                        end
                    end
                    
                    -- –ò—â–µ–º –±–ª–∏–∂–∞–π—à–µ–≥–æ —É–±–∏–π—Ü—É
                    local nearestTarget = nil
                    local shortestDistance = math.huge
                    local playerHRP = character.HumanoidRootPart
                    
                    for _, target in ipairs(targets) do
                        local targetHRP = target.HumanoidRootPart
                        local distance = (targetHRP.Position - playerHRP.Position).Magnitude
                        if distance < shortestDistance then
                            shortestDistance = distance
                            nearestTarget = target
                        end
                    end
                    
                    -- –ù–∞–≤–æ–¥–∏–º—Å—è –Ω–∞ —Ü–µ–ª—å
                    if nearestTarget then
                        local targetHRP = nearestTarget.HumanoidRootPart
                        workspace.CurrentCamera.CFrame = CFrame.new(
                            workspace.CurrentCamera.CFrame.Position, 
                            targetHRP.Position
                        )
                        playerHRP.CFrame = CFrame.lookAt(
                            playerHRP.Position, 
                            Vector3.new(targetHRP.Position.X, targetHRP.Position.Y, targetHRP.Position.Z)
                        )
                    end
                end
                task.wait(0.01)
            end
        end)
    elseif loopVar then
        task.cancel(loopVar)
        _G[loopName] = nil
    end
end

-- –ê–∏–º–±–æ—Ç—ã –¥–ª—è —É–±–∏–π—Ü
Tab4:AddToggle({
    Name = "1x1x1x1 AIMBOT",
    Default = false,
    Callback = function(state)
        killerAimbot(state, "aimbot1x1loop")
    end
})

Tab4:AddToggle({
    Name = "JOHNAIM AIMBOT",
    Default = false,
    Callback = function(state)
        killerAimbot(state, "johnloop")
    end
})

Tab4:AddToggle({
    Name = "SHEDAIM AIMBOT",
    Default = false,
    Callback = function(state)
        killerAimbot(state, "shedloop")
    end
})

-- –ê–∏–º–±–æ—Ç –¥–ª—è –≤—ã–∂–∏–≤—à–µ–≥–æ
Tab4:AddToggle({
    Name = "GUEST AIMBOT",
    Default = false,
    Callback = function(state)
        survivorAimbot(state, "guestloop")
    end
})
Tab5:AddToggle({
    Name = "BRING BACK JUMP POWER",
    Default = false,
    Callback = function(state)
        bringbackjumppower(state) 
    end
})

local function givemesomepizza(state)
    if not state then
        for _, conn in ipairs(connections) do
            conn:Disconnect()
        end
        connections = {}
        return
    end

    local function tp(child)
        if child:IsA("BasePart") and child.Name == "Pizza" then
            local player = game.Players.LocalPlayer
            if player and player.Character then
                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    child.CFrame = hrp.CFrame
                end
            end
        end
    end

    table.insert(connections, workspace.DescendantAdded:Connect(tp))
end

Tab5:AddToggle({
    Name = "PIZZA TP",
    Default = false,
    Callback = function(state)
        givemesomepizza(state)
    end
})


-- –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –∫–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª MISC (Tab5)

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö–∏—Ç–±–æ–∫—Å–∞
local hitboxEnabled = false
local currentHitboxSize = 5
local hitboxTransparency = 0.7
local hitboxLoop = nil

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–∏—Ç–±–æ–∫—Å–æ–≤
local function updateHitboxes()
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character then
            local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
            local head = player.Character:FindFirstChild("Head")
            
            if humanoidRootPart then
                humanoidRootPart.Size = Vector3.new(currentHitboxSize, currentHitboxSize, currentHitboxSize)
                humanoidRootPart.Transparency = hitboxTransparency
                humanoidRootPart.CanCollide = false
            end
            
            if head then
                head.Size = Vector3.new(currentHitboxSize, currentHitboxSize, currentHitboxSize)
                head.Transparency = hitboxTransparency
                head.CanCollide = false
            end
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Ö–∏—Ç–±–æ–∫—Å–æ–≤
local function resetHitboxes()
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player.Character then
            local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
            local head = player.Character:FindFirstChild("Head")
            
            if humanoidRootPart then
                humanoidRootPart.Size = Vector3.new(2, 2, 1)
                humanoidRootPart.Transparency = 0
                humanoidRootPart.CanCollide = true
            end
            
            if head then
                head.Size = Vector3.new(1, 1, 1)
                head.Transparency = 0
                head.CanCollide = true
            end
        end
    end
end

-- –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ UI
Tab5:AddToggle({
    Name = "HITBOX EXPANDER",
    Default = false,
    Callback = function(value)
        hitboxEnabled = value
        if hitboxEnabled then
            -- –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–∏—Ç–±–æ–∫—Å–æ–≤
            hitboxLoop = game:GetService("RunService").Heartbeat:Connect(function()
                updateHitboxes()
            end)
        else
            -- –û—Ç–∫–ª—é—á–∞–µ–º –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ö–∏—Ç–±–æ–∫—Å—ã
            if hitboxLoop then
                hitboxLoop:Disconnect()
            end
            resetHitboxes()
        end
    end
})

Tab5:AddSlider({
    Name = "HITBOX SIZE",
    Min = 1,
    Max = 20,
    Increase = 1,
    Default = 5,
    Callback = function(value)
        currentHitboxSize = value
        if hitboxEnabled then
            updateHitboxes()
        end
    end
})

Tab5:AddSlider({
    Name = "HITBOX TRANSPARENCY",
    Min = 0,
    Max = 1,
    Increase = 0.1,
    Default = 0.7,
    Callback = function(value)
        hitboxTransparency = value
        if hitboxEnabled then
            updateHitboxes()
        end
    end
})
